## Chart 기능 문제 분석 및 해결 방안

**문제 요약:**
대시보드에서 '오늘의 방문자 수'와 '총방문자 수'가 모두 총방문자 수로 표시되는 문제입니다.

**원인:**

1.  **백엔드 버그:** `VisitService.java`의 `getTodayCount()` 메소드가 오늘의 방문자 수가 아닌 전체 방문자 수를 계산하여 반환하고 있습니다.
2.  **프론트엔드 API 호출 오류:** `DashBoard.js`에서 존재하지 않는 `/visit` API를 호출하고 있습니다. 백엔드에는 `/today`와 `/total` API가 각각 구현되어 있습니다.

**해결 방안:**

**1. 백엔드 `VisitService.java` 수정**

`getTodayCount()` 메소드를 다음과 같이 수정하여 오늘의 방문자 수만 정확히 반환하도록 변경해야 합니다.

**기존 코드:**
```java
public long getTodayCount() {
    return visitRepository.findAll().stream().mapToLong(Visit::getCount).sum();
}
```

**수정 코드:**
```java
public long getTodayCount() {
    LocalDate today = LocalDate.now();
    return visitRepository.findByDate(today).map(Visit::getCount).orElse(0L);
}
```

**2. 프론트엔드 `DashBoard.js` 수정**

`/visit` API 호출 대신, `/today`와 `/total` API를 각각 호출하여 데이터를 가져오도록 수정해야 합니다.

**기존 코드:**
```javascript
useEffect(() => {
    axios.get('/visit')
        .then(response => {
            setVisitData(response.data);
        })
        .catch(error => {
            console.error('Error fetching visit data:', error);
        });
}, []);
```

**수정 코드 (예시):**
```javascript
useEffect(() => {
    const fetchVisitData = async () => {
        try {
            const todayResponse = await axios.get('/today');
            const totalResponse = await axios.get('/total');
            // visitByDate는 별도의 API 호출이 필요할 수 있습니다.
            // 우선 today와 total만 반영합니다.
            setVisitData({
                todayVisit: todayResponse.data,
                totalVisit: totalResponse.data,
                visitByDate: {} // 이 부분은 추가적인 구현이 필요합니다.
            });
        } catch (error) {
            console.error('Error fetching visit data:', error);
        }
    };

    fetchVisitData();
}, []);
```
